name: Linux
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

on:
  push:
    branches: master
    paths:
    - '**'
    - '!maps/**'
    - '!**.yml'
    - '!**.md'
    - '**/c-cpp.yml'
  pull_request:
    branches: master
    paths:
    - '**'
    - '!maps/**'
    - '!**.yml'
    - '!**.md'
    - '**/c-cpp.yml'

jobs:
  build:
    name: ${{ matrix.build.name }}
    strategy:
      fail-fast: false
      matrix:
        build:
          - name: ubuntu-22.04-gcc-meson
            os: ubuntu-22.04
            cc: gcc
          - name: ubuntu-22.04-gcc-scons
            os: ubuntu-22.04
            cc: gcc
          - name: ubuntu-22.04-clang-meson
            os: ubuntu-22.04
            cc: clang
          - name: ubuntu-22.04-clang-scons
            os: ubuntu-22.04
            cc: clang

    runs-on: ${{ matrix.build.os }}
    container: ${{ matrix.build.container }}
    env:
      CC: '${{ matrix.build.cc }}'
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: false

    - if: ${{ env.CC }}
      run: |
        if [ "$CC" = "gcc" ]; then
          CXX=g++
        else
          CXX=clang++
        fi
        echo "CXX=${CXX}" >> $GITHUB_ENV

    - name: Show info
      run: |
        export -p
        echo '${{ toJSON(matrix) }}'

    - name: Install dependencies
      run: .github/scripts/install-linux-deps.sh

    - if: ${{ contains(matrix.build.name, 'meson') }}
      name: Install dependencies
      run: |
        sudo apt install -y \
          libphysfs-dev \
          meson \
          ninja-build
        # sudo -H python3 -m pip install meson ninja

    - if: ${{ contains(matrix.build.name, 'scons') }}
      name: Install dependencies
      run: |
        sudo apt install -y scons

    - if: ${{ contains(matrix.build.name, 'meson') }}
      name: Meson build
      run: |
        meson setup _build
        ninja -v -C _build

    - if: ${{ contains(matrix.build.name, 'meson') }}
      name: Test
      run: |
        cd _build
        meson test -v

    - if: ${{ contains(matrix.build.name, 'scons') }}
      name: Scons build
      run: scons -j $(nproc)

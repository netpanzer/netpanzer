name: Linux
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

on:
  push:
    branches: master
    paths:
    - 'src/**/**'
    - 'support/**/*.cpp'
    - '**meson.build'
    - 'setup-build.*'
    - 'subprojects/*.wrap'
    - '**/c-cpp.yml'
  pull_request:
    branches: master
    paths:
    - 'src/**/**'
    - 'setup-build.*'
    - '**meson.build'
    - 'subprojects/*.wrap'
    - '**/c-cpp.yml'

jobs:
  build:
    name: ${{ matrix.build.name }}
    strategy:
      fail-fast: false
      matrix:
        build:
          - name: ubuntu-22.04-gcc-meson
            os: ubuntu-22.04
            cc: gcc
          - name: ubuntu-22.04-clang-meson
            os: ubuntu-22.04
            cc: clang
          - name: noinst-deps-cache-ubuntu
            os: ubuntu-22.04
            cc: gcc

    runs-on: ${{ matrix.build.os }}
    container: ${{ matrix.build.container }}
    env:
      CC: '${{ matrix.build.cc }}'
      NETPANZER_DATADIR: ${{ github.workspace }}/data
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: false

    - if: ${{ env.CC }}
      run: |
        if [ "$CC" = "gcc" ]; then
          CXX=g++
        else
          CXX=clang++
        fi
        echo "CXX=${CXX}" >> $GITHUB_ENV

    - name: Show info
      run: |
        export -p
        echo '${{ toJSON(matrix) }}'

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt upgrade -y
        sudo apt install -y meson ninja-build python3 python3-setuptools

    - if: ${{ ! contains(matrix.os.name, 'cache') }}
      name: Install more dependencies
      run: .github/scripts/install-linux-deps.sh

    - if: ${{ ! contains(matrix.os.name, 'cache') }}
      name: Meson Build Cache
      id: Linux-mesonBuild-cache
      uses: actions/cache@v4
      with:
        path: |
          ${{ github.workspace }}/_build
          ${{ github.workspace }}/subprojects
        key: ${{ runner.os }}-${{ hashFiles('**/meson.build') }}

    - if: ${{ steps.Linux-mesonBuild-cache.outputs.cache-hit != 'true' || ! contains(matrix.os.name, 'cache') }}
      name: Setup
      run: |
        ./setup-build.sh _build -Db_sanitize=none

    - name: Meson build
      run: ninja -v -C _build

    - name: Test
      run: |
        cd _build
        meson test --suite=netpanzer -v

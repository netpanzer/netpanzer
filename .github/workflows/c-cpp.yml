name: Linux
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

on:
  push:
    branches: master
    paths:
    - 'src/**/**'
    - 'support/**/*.cpp'
    - '**meson.build'
    - 'setup-build.*'
    - 'subprojects/*.wrap'
    - '**/c-cpp.yml'
  pull_request:
    branches: master
    paths:
    - 'src/**/**'
    - 'setup-build.*'
    - '**meson.build'
    - 'subprojects/*.wrap'
    - '**/c-cpp.yml'

jobs:
  build:
    name: ${{ matrix.build.name }}
    strategy:
      fail-fast: true
      matrix:
        build:
        - name: ubuntu-20.04-gcc
          os: ubuntu-20.04  # supported until >= April 2025
        - name: data-install-test-gcc
          os: ubuntu-22.04
        - name: ubuntu-22.04-gcc
          os: ubuntu-22.04
        - name: ubuntu-22.04-clang
          os: ubuntu-22.04
        - name: ubuntu-no-deps-gcc
          os: ubuntu-22.04

    runs-on: ${{ matrix.build.os }}
    env:
      NETPANZER_DATADIR: ${{ github.workspace }}/data
      INST_PREFIX_DIR: ${{ github.workspace }}/inst_test
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: false

    - name: Prepare variables
      run: |
        if [ "${{ contains(matrix.build.name, 'gcc') }}" = "true" ]; then
          CC=gcc
          CXX=g++
        else
          CC=clang
          CXX=clang++
        fi
        echo "CC=$CC" >> $GITHUB_ENV
        echo "CXX=$CXX" >> $GITHUB_ENV
        echo "want_nls=${{ ! contains(matrix.build.name, 'no-deps') }}" >> $GITHUB_ENV

    - name: Show info
      run: |
        export -p
        echo '${{ toJSON(matrix) }}'

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt upgrade -y
        sudo apt install -y \
          python3 \
          python3-setuptools
        if [ "${{ contains(matrix.build.name, '20.04') }}" = "false" ]; then
          sudo apt install -y \
          meson \
          ninja-build
        else
          sudo apt install -y python3-pip
          python -m pip install --upgrade pip
          pip install meson ninja
        fi

    - if: ${{ ! contains(matrix.build.name, 'no-deps') }}
      run: |
        sudo apt install -y \
          gettext \
          liblua5.1-0-dev \
          libphysfs-dev \
          libsdl2-dev \
          libsdl2-mixer-dev \
          libsdl2-ttf-dev

    - name: Setup
      run: |
        ./setup-build.sh _build -Dprefix=$INST_PREFIX_DIR -Dnls=$want_nls

    - name: Meson build
      run: ninja -C _build

    - name: Test
      run: |
        cd _build
        meson test --suite=netpanzer -v

    - name: Data install test
      if: ${{ contains(matrix.build.name, 'data-install-test') }}
      run: |
        unset NETPANZER_DATADIR
        cd _build
        # want fail
        $GITHUB_WORKSPACE/tests/test_data_install.sh || true
        meson install --skip-subprojects
        cd $INST_PREFIX_DIR/bin
        # want pass
        $GITHUB_WORKSPACE/tests/test_data_install.sh
